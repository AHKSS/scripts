local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Knit = require(ReplicatedStorage.Packages.Knit)
local KnitStarted = Knit.Start():await()
local FallingStarsController = require(game:GetService("Players").LocalPlayer.PlayerScripts.Client.Controllers.FallingStarsController)
local FallingStarsService = Knit.GetService("FallingStarsService")

getgenv().AutoCollectStars = true
getgenv().CollectDelay = 0.5 

local function collectStars()
    while getgenv().AutoCollectStars do
        for starId, starInstance in pairs(FallingStarsController._stars) do
            if starInstance and starInstance.Parent then
                local result = FallingStarsService:claimStar(starId)
                task.wait(0.1)
            end
        end
        
        task.wait()
    end
end

local player = game.Players.LocalPlayer
local userInputService = game:GetService("UserInputService")
local camera = workspace.CurrentCamera

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "CutsceneGui"
screenGui.IgnoreGuiInset = true
screenGui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Name = "FlashFrame"
frame.Size = UDim2.new(1, 0, 1, 0)
frame.BackgroundColor3 = Color3.new(1, 1, 1)
frame.BackgroundTransparency = 1
frame.BorderSizePixel = 0
frame.ZIndex = 10
frame.Parent = screenGui

local thankYouLabel = Instance.new("TextLabel")
thankYouLabel.Name = "ThankYouLabel"
thankYouLabel.Size = UDim2.new(0, 400, 0, 70)
thankYouLabel.Position = UDim2.new(0.5, -200, 0.7, 0)
thankYouLabel.BackgroundTransparency = 1
thankYouLabel.Text = "Thank you for using William Hub"
thankYouLabel.TextColor3 = Color3.new(1, 1, 1)
thankYouLabel.TextSize = 24
thankYouLabel.Font = Enum.Font.FredokaOne
thankYouLabel.Visible = false
thankYouLabel.ZIndex = 11
thankYouLabel.Parent = screenGui

local textStroke = Instance.new("UIStroke")
textStroke.Thickness = 2
textStroke.Color = Color3.new(0, 0, 0)
textStroke.Transparency = 0
textStroke.Parent = thankYouLabel

local soundEffect = Instance.new("Sound")
soundEffect.Name = "CutsceneSound"
soundEffect.SoundId = "rbxassetid://9043184557"
soundEffect.Volume = 1
soundEffect.Parent = screenGui

local isCutscenePlaying = false

local dansAnimation = nil

local function createPartWithLogo()
    local logoPart = Instance.new("Part")
    logoPart.Name = "LogoPart"
    logoPart.Size = Vector3.new(4, 4, 0.5)
    logoPart.Anchored = true
    logoPart.CanCollide = false  -- Fiziksel çarpışmayı devre dışı bırak
    logoPart.Material = Enum.Material.SmoothPlastic
    logoPart.BrickColor = BrickColor.new("Bright blue")
    logoPart.Transparency = 0  -- Hafif şeffaflık ekle

    -- Çok uzak bir konum yerine, karakterin yakınında ama görünmez bir konuma yerleştir
    local character = player.Character
    local characterPosition = character and character:FindFirstChild("HumanoidRootPart") and 
        character.HumanoidRootPart.Position or Vector3.new(0, 5, 0)
    
    -- Karakterin 100 birim yukarısına yerleştir (görünmez olacak ama çok uzak olmayacak)
    local partPosition = characterPosition + Vector3.new(0, 100, 0)
    logoPart.Position = partPosition
    logoPart.Parent = workspace

    local floor = Instance.new("Part")
    floor.Name = "CutsceneFloor"
    floor.Size = Vector3.new(20, 1, 20)
    floor.Anchored = true
    floor.CanCollide = false  -- Fiziksel çarpışmayı devre dışı bırak
    floor.Material = Enum.Material.SmoothPlastic
    floor.BrickColor = BrickColor.new("Bright green")
    floor.Position = partPosition - Vector3.new(0, 2.5, 0)
    floor.Transparency = 0  -- Hafif şeffaflık ekle
    floor.Parent = workspace

    local surfaceGui = Instance.new("SurfaceGui")
    surfaceGui.Name = "LogoGui"
    surfaceGui.Face = Enum.NormalId.Front
    surfaceGui.SizingMode = Enum.SurfaceGuiSizingMode.PixelsPerStud
    surfaceGui.PixelsPerStud = 50
    surfaceGui.Parent = logoPart

    local imageLabel = Instance.new("ImageLabel")
    imageLabel.Name = "Logo"
    imageLabel.Size = UDim2.new(1, 0, 1, 0)
    imageLabel.BackgroundTransparency = 1
    imageLabel.Image = "rbxassetid://123860527965366"
    imageLabel.Parent = surfaceGui

    return logoPart, floor
end

local function loadDanceAnimation()
    if dansAnimation then return dansAnimation end

    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")

    local animation = Instance.new("Animation")
    animation.AnimationId = "rbxassetid://507771019"

    dansAnimation = humanoid:LoadAnimation(animation)
    return dansAnimation
end

local function playFlashEffect(duration)
    local tweenService = game:GetService("TweenService")
    local fadeInInfo = TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
    local fadeOutInfo = TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.In)

    local showTween = tweenService:Create(frame, fadeInInfo, {BackgroundTransparency = 0})
    showTween:Play()
    showTween.Completed:Wait()

    wait(duration)

    local hideTween = tweenService:Create(frame, fadeOutInfo, {BackgroundTransparency = 1})
    hideTween:Play()
    hideTween.Completed:Wait()
end

local function playCutscene()
    if isCutscenePlaying then return end
    isCutscenePlaying = true

    -- Tüm açık GUI'leri sakla
    local savedGuis = {}
    local playerGui = player:WaitForChild("PlayerGui")
    local coreGui = game:GetService("CoreGui")

    -- PlayerGui'deki GUI'leri kaydet ve gizle
    for _, gui in pairs(playerGui:GetChildren()) do
        if gui:IsA("ScreenGui") and gui ~= screenGui and gui.Enabled then
            table.insert(savedGuis, {
                instance = gui,
                parent = playerGui,
                transparency = {}
            })

            -- Her GUI'nin içindeki tüm görünür frame ve diğer elementlerin transparencylerini kaydet
            for _, descendant in pairs(gui:GetDescendants()) do
                if descendant:IsA("GuiObject") and descendant.Visible then
                    local originalTransparency = descendant.BackgroundTransparency
                    savedGuis[#savedGuis].transparency[descendant] = {
                        originalTransparency = originalTransparency,
                        originalTextTransparency = descendant:IsA("TextLabel") and descendant.TextTransparency or nil,
                        originalImageTransparency = descendant:IsA("ImageLabel") and descendant.ImageTransparency or nil
                    }
                end
            end

            -- GUI'yi gizle
            gui.Enabled = false
        end
    end

    -- CoreGui'deki GUI'leri kaydet ve gizle (pcall ile güvenli bir şekilde dene)
    pcall(function()
        for _, gui in pairs(coreGui:GetChildren()) do
            if gui:IsA("ScreenGui") and gui.Enabled and gui.Name ~= "RobloxGui" and gui.Name ~= "PlayerList" then
                -- RobloxGui ve PlayerList gibi kritik GUI'leri atla
                table.insert(savedGuis, {
                    instance = gui,
                    parent = coreGui,
                    transparency = {}
                })

                -- Her GUI'nin içindeki tüm görünür frame ve diğer elementlerin transparencylerini kaydet
                for _, descendant in pairs(gui:GetDescendants()) do
                    if descendant:IsA("GuiObject") and descendant.Visible then
                        local originalTransparency = descendant.BackgroundTransparency
                        savedGuis[#savedGuis].transparency[descendant] = {
                            originalTransparency = originalTransparency,
                            originalTextTransparency = descendant:IsA("TextLabel") and descendant.TextTransparency or nil,
                            originalImageTransparency = descendant:IsA("ImageLabel") and descendant.ImageTransparency or nil
                        }
                    end
                end

                -- GUI'yi gizle
                gui.Enabled = false
            end
        end
    end)
    soundEffect:Play()

    local humanoid = player.Character and player.Character:FindFirstChild("Humanoid")
    if humanoid then
        humanoid.WalkSpeed = 0
        humanoid.JumpPower = 0
    end

    local character = player.Character
    local characterPosition = character and character:FindFirstChild("HumanoidRootPart") and 
        character.HumanoidRootPart.Position or Vector3.new(0, 5, 0)

    local originalCameraType = camera.CameraType
    local originalCameraSubject = camera.CameraSubject
    local originalCameraCFrame = camera.CFrame

    local logoPart, floor = createPartWithLogo()

    loadDanceAnimation()

    local tweenService = game:GetService("TweenService")
    local fadeInInfo = TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
    local fadeOutInfo = TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.In)

    local showTween = tweenService:Create(frame, fadeInInfo, {BackgroundTransparency = 0})
    showTween:Play()
    showTween.Completed:Wait()

    camera.CameraType = Enum.CameraType.Scriptable
    local farPosition = logoPart.Position
    local cameraPosition = farPosition - Vector3.new(0, 0, 10)
    camera.CFrame = CFrame.new(cameraPosition, farPosition)

    wait(0.5)

    local hideTween = tweenService:Create(frame, fadeOutInfo, {BackgroundTransparency = 1})
    hideTween:Play()
    hideTween.Completed:Wait()

    thankYouLabel.TextTransparency = 1
    textStroke.Transparency = 1
    thankYouLabel.Visible = true

    local labelFadeIn = tweenService:Create(
        thankYouLabel,
        TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.Out),
        {TextTransparency = 0}
    )

    local strokeFadeIn = tweenService:Create(
        textStroke,
        TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.Out),
        {Transparency = 0}
    )

    labelFadeIn:Play()
    strokeFadeIn:Play()

    wait(1)

    local closeToPart = CFrame.new(
        farPosition - Vector3.new(0, 0, 5),
        farPosition
    )

    local startCFrame = camera.CFrame
    local endCFrame = closeToPart
    local tweenDuration = 4
    local startTime = tick()

    local function smoothStep(x)
        return x * x * x * (x * (x * 6 - 15) + 10)
    end

    local cameraConnection
    cameraConnection = game:GetService("RunService").RenderStepped:Connect(function()
        local elapsed = tick() - startTime
        local alpha = math.min(elapsed / tweenDuration, 1)

        local easedAlpha = smoothStep(alpha)

        camera.CFrame = startCFrame:Lerp(endCFrame, easedAlpha)

        if alpha > 0.1 and alpha < 0.9 then
            local wobbleAmount = 0.03 * math.sin(elapsed * 2) * (1 - alpha)
            local wobbleOffset = CFrame.new(
                math.sin(elapsed * 1.5) * wobbleAmount,
                math.cos(elapsed * 2) * wobbleAmount,
                0
            )
            camera.CFrame = camera.CFrame * wobbleOffset
        end

        if alpha >= 1 then
            cameraConnection:Disconnect()
        end
    end)

    wait(tweenDuration + 0.1)
    wait(1)

    local showTween2 = tweenService:Create(frame, fadeInInfo, {BackgroundTransparency = 0})
    showTween2:Play()
    showTween2.Completed:Wait()

    character = player.Character
    characterPosition = character and character:FindFirstChild("HumanoidRootPart") and 
        character.HumanoidRootPart.Position or Vector3.new(0, 5, 0)

    local danceViewCFrame = CFrame.new(
        characterPosition + Vector3.new(5, 2, 5),
        characterPosition
    )
    camera.CFrame = danceViewCFrame

    -- Dans animasyonunu başlat
    dansAnimation:Play()

    -- Flaşı kaldır
    local hideTween2 = tweenService:Create(frame, fadeOutInfo, {BackgroundTransparency = 1})
    hideTween2:Play()

    -- Kamera rotasyon animasyonunu hemen başlat
    local startTime = tick()
    local rotationDuration = 4

    local rotationConnection
    rotationConnection = game:GetService("RunService").RenderStepped:Connect(function()
        local elapsed = tick() - startTime
        if elapsed >= rotationDuration then
            rotationConnection:Disconnect()
            return
        end

        local currentCharPos = character and character:FindFirstChild("HumanoidRootPart") and 
            character.HumanoidRootPart.Position or characterPosition

        local angle = (elapsed / rotationDuration) * math.pi * 2
        local radius = 5
        local smoothFactor = math.sin(math.min(elapsed / 0.5, 1) * (math.pi / 2))  -- Yumuşak başlangıç

        -- Gerçek yarıçapı yumuşak bir şekilde artır
        local effectiveRadius = radius * smoothFactor

        local newX = currentCharPos.X + math.cos(angle) * effectiveRadius
        local newZ = currentCharPos.Z + math.sin(angle) * effectiveRadius
        local newPosition = Vector3.new(newX, currentCharPos.Y + 2, newZ)

        camera.CFrame = CFrame.new(newPosition, currentCharPos)
    end)

    -- Flaşın tamamen kalkmasını bekle
    hideTween2.Completed:Wait()

    -- Rotasyon animasyonunun tamamlanmasını bekle
    wait(rotationDuration)

    playFlashEffect(0.5)

    dansAnimation:Stop()

    logoPart:Destroy()
    floor:Destroy()

    local labelFadeOut = tweenService:Create(
        thankYouLabel,
        TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.In),
        {TextTransparency = 1}
    )

    local strokeFadeOut = tweenService:Create(
        textStroke,
        TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.In),
        {Transparency = 1}
    )

    labelFadeOut:Play()
    strokeFadeOut:Play()

    labelFadeOut.Completed:Connect(function()
        thankYouLabel.Visible = false
    end)

    local startReturnCFrame = camera.CFrame
    local endReturnCFrame = originalCameraCFrame
    local returnDuration = 2
    local returnStartTime = tick()

    local returnConnection
    returnConnection = game:GetService("RunService").RenderStepped:Connect(function()
        local elapsed = tick() - returnStartTime
        local alpha = math.min(elapsed / returnDuration, 1)

        local easedAlpha = alpha * alpha * (3 - 2 * alpha)

        camera.CFrame = startReturnCFrame:Lerp(endReturnCFrame, easedAlpha)

        if alpha >= 1 then
            returnConnection:Disconnect()
        end
    end)

    wait(returnDuration + 0.1)

    camera.CameraType = originalCameraType
    camera.CameraSubject = originalCameraSubject

    if humanoid then
        humanoid.WalkSpeed = 16
        humanoid.JumpPower = 50
    end

    -- Kaydedilen GUI'leri yumuşak bir şekilde geri getir
    for _, guiData in ipairs(savedGuis) do
        local gui = guiData.instance
        local parent = guiData.parent

        -- GUI'nin hala geçerli olduğundan emin ol
        if gui and gui:IsA("ScreenGui") then
            -- GUI'yi etkinleştir
            pcall(function()
                gui.Enabled = true
            end)

            -- Her GUI elementini yumuşak bir şekilde görünür yap
            for element, data in pairs(guiData.transparency) do
                if element:IsA("GuiObject") and element.Parent then
                    -- Önce tam şeffaf yap
                    pcall(function()
                        element.BackgroundTransparency = 1
                        if element:IsA("TextLabel") and data.originalTextTransparency ~= nil then
                            element.TextTransparency = 1
                        end
                        if element:IsA("ImageLabel") and data.originalImageTransparency ~= nil then
                            element.ImageTransparency = 1
                        end

                        -- Sonra yumuşak bir şekilde orijinal değerlerine getir
                        local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
                        local properties = {BackgroundTransparency = data.originalTransparency}

                        if element:IsA("TextLabel") and data.originalTextTransparency ~= nil then
                            properties.TextTransparency = data.originalTextTransparency
                        end
                        if element:IsA("ImageLabel") and data.originalImageTransparency ~= nil then
                            properties.ImageTransparency = data.originalImageTransparency
                        end

                        tweenService:Create(element, tweenInfo, properties):Play()
                    end)
                end
            end
        end
    end

    isCutscenePlaying = false
end

playCutscene()
